Journal of Sorts:

20/6/2025. Breakthrough 
A few weeks ago I set up this project. I planned the basics of the project in my notebook and was ready to hit the ground running. Then I started setting out the basic
foundations of the project. First I initalised my front end using react and my back end with express. Linked them and set up a prisma database. Dockerised all of it.
Started adding packages for authentication and ... and ...
And when I started to write a tiny bit of functionality I just didn't understand what I was doing. I think this is because I am used to write the whole application
myself. This I have since learned is not the node/react way to do things. React and Node are so big and good because everyone has already done the grunt work for you.
Rather than writing an encryption algorithm from scratch, I have access to a highly secure one with one import. 
I realised today that I have to have a different mindset when creating this project. I, as the 'boss' of the project, need to employ packages or 'employees' to do work
for me. 
My functions aren't going to be big 100 line functions where I do everything. A function in this project will look more like 
    export const function = (input) {
        result = package.doSomethingWithInput(input)
        resultjson = {
            result:result
        }
        return resultjson
    }

I think tonight I have made a big breakthrough. The reason why it felt like I didn't know any code for this project was because I don't know any code for this project.
I need to come to a problem. Think what do I need to fix this problem. Then look for a solution for that problem and use that solution.

Time to start winning.




# What needs to be done?

Frontend:

- Entire front end needs to be created
- What does the web app look like
    Probably best to make the web app first before I even start to think about the mobile app

Backend:

- Entire backend needs to be created
- What does the backend even do?
    - Two thoughts when it comes to the basic functionality
    - User functionality
        - Create a user
        - User log in
            - What does a user look like?
                A user will have 

    - Climb functionality
        - Create a Climb
            - What does a climb look like?
                A climb object will have fields such as
                    climbID/climbName/climbGrade/gymID/setBy/photoOfClimb/videoOfBeta
                So there needs to be a backend function for creating a climb.
                createClimb() will take a climb name, gymID, climbPhoto and a setBy value and create an instance and ID.
                The other parts such as grade and videoOfBeta can be uploaded later




Blueprint of Objects that this app will have:


Gyms / Users / Competitions / Climbs

Users are linked to one or many Gyms
Competitions are linked to one gym
Climbs are linked to gyms, and can be part of a Competitions


Gyms:
gymID/gymName/climbsList (list of climbs) /competitionsList

Climb:
climbID/climbName/climbGrade (maybe) /climbSetBy(userID)/climbPhoto/climbBetaVideo (maybe) /competitionID (maybe)

Competitions
competitionID/compName/compRules (json)/ climbers (list of userID)/ climbs (list of climbs) / leaderboard (maybe, not sure how to work this yet)

Users:
userID/name/registeredGyms (list of gyms) /registeredCompetitions (list of comps) / setClimbs (list of climbID) / completedClimbs (list of climbID) / role (climber/setter/admin)


    
Plan for the time being,

Have the ability to create a user and create a climb. Then that user can interact with that climb